name: UpdateNordVPNlistOR

on:
  schedule:
    - cron: '0 */1 * * *'  # Every 1 hours

  workflow_dispatch:

concurrency:
  group: nordvpn-update
  cancel-in-progress: false

jobs:
  build:
    runs-on: ubuntu-latest
    timeout-minutes: 10  # Total workflow timeout

    steps:
      - uses: actions/checkout@v4

      - name: Download server lists and update list files
        run: |
          mkdir -p list
          declare -a countrycode=("au" "fr" "nl" "sg" "uk" "us")
          declare -a countryid=("13" "74" "153" "195" "227" "228")
          for (( i=0; i<${#countrycode[@]}; i++ ));
          do
            curl --silent "https://api.nordvpn.com/v1/servers/recommendations?filters\[country_id\]=${countryid[$i]}&filters\[servers_technologies\]\[identifier\]=openvpn_udp&limit=1000" | jq --raw-output '.[].hostname' | sort > list/${countrycode[$i]}.txt
          done

      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y sshpass parallel

      - name: Setup NordVPN and test all servers in parallel
        env:
          VPS_IP: ${{ secrets.VPS_IP }}
          VPS_USER: ${{ secrets.VPS_USER }}
          VPS_PASS: ${{ secrets.VPS_PASS }}
          NORDVPN_USER: ${{ secrets.NORDVPN_USER }}
          NORDVPN_PASS: ${{ secrets.NORDVPN_PASS }}
        timeout-minutes: 5  # Strict 5-minute timeout for testing
        run: |
          mkdir -p list-IR
          
          # Create parallel test script
          cat > parallel_test.sh << 'SCRIPT'
          #!/bin/bash
          VPS_IP="$1"
          VPS_USER="$2"
          VPS_PASS="$3"
          NORDVPN_USER="$4"
          NORDVPN_PASS="$5"
          SERVER="$6"
          
          SERVER_NAME=$(echo $SERVER | cut -d'.' -f1)
          
          # Quick connection test with 10-second timeout
          result=$(sshpass -p "$VPS_PASS" ssh -o StrictHostKeyChecking=no -o ConnectTimeout=5 \
            ${VPS_USER}@${VPS_IP} "timeout 10 bash -c '
              # Try quick connect
              if nordvpn connect $SERVER_NAME &>/dev/null; then
                # Quick latency test (only 2 pings)
                latency=\$(ping -c 2 -W 1 8.8.8.8 2>/dev/null | tail -1 | cut -d/ -f5 | cut -d. -f1)
                nordvpn disconnect &>/dev/null
                if [[ -n \"\$latency\" && \"\$latency\" -lt 100 ]]; then
                  echo \"OK:\$latency\"
                fi
              fi
            '" 2>/dev/null)
          
          if [[ $result == OK:* ]]; then
            echo "$SERVER"
          fi
          SCRIPT
          
          chmod +x parallel_test.sh
          
          # Setup NordVPN on VPS first (one-time setup)
          echo "Setting up NordVPN on VPS..."
          sshpass -p "$VPS_PASS" ssh -o StrictHostKeyChecking=no ${VPS_USER}@${VPS_IP} bash << EOF
          # Quick setup
          if ! command -v nordvpn &> /dev/null; then
            curl -sSL https://downloads.nordcdn.com/apps/linux/install.sh | sh
            sudo systemctl start nordvpnd
            sleep 5
          fi
          
          # Login if needed
          nordvpn account &>/dev/null || echo "${NORDVPN_PASS}" | nordvpn login --username "${NORDVPN_USER}"
          
          # Fast settings
          nordvpn set technology openvpn &>/dev/null
          nordvpn set protocol udp &>/dev/null
          nordvpn set killswitch off &>/dev/null
          EOF
          
          # Test all servers in parallel
          echo "Testing all servers in parallel (5-minute limit)..."
          
          for cc in au fr nl sg uk us; do
            # Process all servers for this country in parallel
            # Using GNU parallel with 20 concurrent jobs
            cat list/${cc}.txt | \
            parallel -j 20 --timeout 15 --no-notice \
              "./parallel_test.sh '$VPS_IP' '$VPS_USER' '$VPS_PASS' '$NORDVPN_USER' '$NORDVPN_PASS' {}" \
              > list-IR/${cc}.txt 2>/dev/null &
          done
          
          # Wait for all background jobs (max 5 minutes due to timeout)
          wait
          
          # Report results
          echo "=== Results ==="
          for cc in au fr nl sg uk us; do
            count=$(wc -l < list-IR/${cc}.txt 2>/dev/null || echo 0)
            echo "$cc: $count servers with <100ms latency"
          done
          
          rm -f parallel_test.sh

      - name: Commit and push changes
        uses: stefanzweifel/git-auto-commit-action@v4
        with:
          commit_message: "Update server lists"
          commit_user_name: 'github-actions[bot]'
          commit_user_email: 'github-actions[bot]@users.noreply.github.com'
          commit_author: 'github-actions[bot] <github-actions[bot]@users.noreply.github.com>'
