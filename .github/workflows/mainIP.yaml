name: NordVPNIPCheck

on:
  schedule:
    - cron: '0 */12 * * *'  # Every 6 hours
  workflow_dispatch:  # Manual trigger

jobs:
  check-ips:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
    
    - name: Setup and Check IPs
      env:
        NORDVPN_TOKEN: ${{ secrets.NORDVPN_TOKEN }}
      run: |
        set -e  # Exit on error
        
        # Check if NordVPN is installed
        if ! command -v nordvpn &> /dev/null; then
          # Install NordVPN
          wget -qO - https://repo.nordvpn.com/gpg/nordvpn_public.asc | sudo tee /etc/apt/trusted.gpg.d/nordvpn.asc
          echo "deb https://repo.nordvpn.com/deb/nordvpn/debian stable main" | sudo tee /etc/apt/sources.list.d/nordvpn.list
          sudo apt-get update
          sudo apt-get install -y nordvpn
        fi
        
        # Add runner user to nordvpn group
        sudo usermod -aG nordvpn $USER
        
        # Login with token
        sudo -E nordvpn login --token "$NORDVPN_TOKEN"
        
        # Set UDP protocol
        sudo nordvpn set protocol udp || echo "Protocol already set"
        
        # Check if server list exists
        if [ ! -f "list/fr.txt" ]; then
          echo "Error: list/fr.txt not found"
          exit 1
        fi
        
        # Initialize JSON array
        echo "[" > ips.json
        first=true
        
        # Read servers and check each
        while IFS= read -r server || [ -n "$server" ]; do
          # Skip empty lines and comments
          [[ -z "$server" || "$server" =~ ^#.*$ ]] && continue
          
          # Remove .nordvpn.com suffix if present
          server_id="${server%.nordvpn.com}"
          
          echo "Connecting to $server_id..."
          
          # Connect to server (using just the server ID)
          if sudo nordvpn connect "$server_id"; then
            sleep 3  # Wait for connection
            
            # Get IP
            ip=$(curl -s https://checkip.amazonaws.com/ | tr -d '\n')
            echo "Got IP: $ip"
            
            # Add to JSON (store original server name)
            if [ "$first" = true ]; then
              first=false
            else
              echo "," >> ips.json
            fi
            printf '{"server":"%s","ip":"%s"}' "$server" "$ip" >> ips.json
            
            # Disconnect
            sudo nordvpn disconnect
            sleep 60
          else
            echo "Failed to connect to $server_id"
          fi
        done < list/fr.txt
        
        # Close JSON array
        echo "]" >> ips.json
        
        # Logout
        sudo nordvpn logout --persist-token || true
        
        # Show result
        echo "Generated ips.json:"
        cat ips.json
    
    - name: Commit results
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        git add ips.json
        git commit -m "Update IPs - $(date -u)" || exit 0
        git push
        git add ips.json
        git commit -m "Update IPs - $(date -u)" || exit 0
        git push
