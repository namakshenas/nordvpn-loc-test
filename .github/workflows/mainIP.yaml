name: NordVPNIPCheck

on:
  schedule:
    - cron: '0 */6 * * *'  # Every 6 hours
  workflow_dispatch:  # Manual trigger

jobs:
  check-ips:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
    
    - name: Setup and Check IPs
      env:
        NORDVPN_TOKEN: ${{ secrets.NORDVPN_TOKEN }}
      run: |
        set -e  # Exit on error
        
        # Check if NordVPN is installed
        if ! command -v nordvpn &> /dev/null; then
          # Install NordVPN
          wget -qO - https://repo.nordvpn.com/gpg/nordvpn_public.asc | sudo tee /etc/apt/trusted.gpg.d/nordvpn.asc
          echo "deb https://repo.nordvpn.com/deb/nordvpn/debian stable main" | sudo tee /etc/apt/sources.list.d/nordvpn.list
          sudo apt-get update
          sudo apt-get install -y nordvpn
        fi
        
        # Add runner user to nordvpn group
        sudo usermod -aG nordvpn $USER
        
        # Login with token
        sudo -E nordvpn login --token "$NORDVPN_TOKEN"
        
        # Set UDP protocol
        sudo nordvpn set protocol udp || echo "Protocol already set"
        
        # Check if server list exists
        if [ ! -f "list/fr.txt" ]; then
          echo "Error: list/fr.txt not found"
          exit 1
        fi
        
        # Create temp directory for results
        mkdir -p temp_results
        
        # Function to check one server
        check_server() {
          local server="$1"
          local index="$2"
          local server_id="${server%.nordvpn.com}"
          
          echo "Checking $server_id..."
          
          if sudo nordvpn connect "$server_id" > /dev/null 2>&1; then
            sleep 3  # Reduced wait time
            local ip=$(curl -s https://checkip.amazonaws.com/ | tr -d '\n')
            echo "$server_id: $ip"
            printf '{"server":"%s","ip":"%s"}' "$server" "$ip" > "temp_results/${index}.json"
            sudo nordvpn disconnect > /dev/null 2>&1
          else
            echo "$server_id: FAILED"
            echo '{}' > "temp_results/${index}.json"
          fi
        }
        
        # Export function for parallel use
        export -f check_server
        
        # Process servers in parallel (max 5 concurrent)
        index=0
        while IFS= read -r server || [ -n "$server" ]; do
          [[ -z "$server" || "$server" =~ ^#.*$ ]] && continue
          
          # Run in background with job control
          ((index++))
          check_server "$server" "$index" &
          
          # Limit concurrent jobs
          if (( $(jobs -r | wc -l) >= 5 )); then
            wait -n  # Wait for any job to finish
          fi
        done < list/fr.txt
        
        # Wait for all remaining jobs
        wait
        
        # Combine results into final JSON
        echo "[" > ips.json
        first=true
        for file in temp_results/*.json; do
          [ -f "$file" ] || continue
          content=$(cat "$file")
          [ "$content" = "{}" ] && continue
          
          if [ "$first" = true ]; then
            first=false
          else
            echo "," >> ips.json
          fi
          echo -n "$content" >> ips.json
        done
        echo "]" >> ips.json
        
        # Cleanup
        rm -rf temp_results
        
        # Logout
        sudo nordvpn logout --persist-token || true
        
        # Show result
        echo "Generated ips.json:"
        cat ips.json
    
    - name: Commit results
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        git add ips.json
        git commit -m "Update IPs - $(date -u)" || exit 0
        git push
